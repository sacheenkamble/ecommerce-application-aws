name: Terraform CI/CD
# Controls when the workflow will run
on:
#       push:                                      # When code is pushed to the main branch
#         branches:
#           - main
#         paths:
#            - project01/awsaccounts/**       # Terraform files path to monitor in main branch

#       pull_request:
#         branches:
#           - main                                 # When PR raised for Target 'main' branch
#         paths:
#           - project01/awsaccounts/**       # Terraform files path to monitor in PRs to main branch
#         types:
#           - closed                               # To run checks on PR close (for merge)  # When PR is closed (merged)
      workflow_dispatch:                         # When this workflow is manually triggered

## Allow this workflow to read all contents in this Git repo
permissions:
   id-token: write
   contents: read
   actions: read

jobs:
   terraform:
     name: Terraform Lint, Security Check, and Deploy
     runs-on: ubuntu-latest
    
     env:
      WORKING_DIR: project01/awsaccounts/**  #Adjust path as necessary
      AWS_REGION: us-east-1
      TF_VERSION: 1.4.0
      TFLINT_VERSION: 0.46.1  # Updated to a more recent version
      TFSEC_VERSION: 1.28.1   # Updated to a more recent version

     steps:
       - name: Checkout GitHub repository
         uses: actions/checkout@v4

       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v4
         with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ env.AWS_REGION }}

       - name: Set up Terraform
         uses: hashicorp/setup-terraform@v1
         with:
           terraform_version: ${{ env.TF_VERSION }}

       - name: Install TFLint
         run: |
           curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
           unzip tflint.zip -d /usr/local/bin/
           tflint --version

       - name: Install tfsec
         run: |
           curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
           chmod +x tfsec
           mv tfsec /usr/local/bin/
           tfsec --version

       - name: Terraform Fmt
         working-directory: ${{env.WORKING_DIR}}
         id: fmt
         run: terraform fmt -recursive
         continue-on-error: true


       - name: Terraform init
         id: init
         run: terraform init
         working-directory: ${{env.WORKING_DIR}}
        # env:
        #   TF_CLI_ARGS_init: "-backend-config=role_arn=arn:aws:iam::99999999:role/my-github-actions-role -upgrade -reconfigure"
        #   TF_VAR_assume_role: "my-github-actions-role"

       - name: Terraform validate
         working-directory: ${{env.WORKING_DIR}}
         id: validate
         run: terraform validate

       - name: Terraform plan
         id: plan
         run: terraform plan -no-color
         working-directory: ${{env.WORKING_DIR}}
           # env:
           #   TF_VAR_assume_role: "my-github-actions-role"

       - name: TFLint
         run: |
           tflint --init
           tflint
         continue-on-error: true

       - name: tfsec
         run: tfsec .
         continue-on-error: true

       - name: Terraform Apply
         if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
         working-directory: ${{env.WORKING_DIR}}
         run: terraform apply -auto-approve
